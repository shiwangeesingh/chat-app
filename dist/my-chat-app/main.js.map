{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/shared/login/login.component.css","webpack:///./src/app/shared/login/login.component.html","webpack:///./src/app/shared/login/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './shared/login/login.component';\r\nimport { ChatComponent } from './chat/chat.component';\r\n\r\n//import { ChatComponent } from './layout/chat/chat.component';\r\nconst routes: Routes = ([\r\n  { path: '', component:LoginComponent },\r\n { path: 'chat', component:ChatComponent },\r\n]);\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'Admin';\r\n  message;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { NgModule }      from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\r\nimport { AppComponent }  from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LoginComponent } from './shared/login/login.component';\r\nimport { ChatComponent } from './chat/chat.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ChatComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n     AppRoutingModule,\r\n     HttpClientModule,\r\n     FormsModule , \r\n     ReactiveFormsModule\r\n  ],\r\n \r\n  bootstrap: [AppComponent]\r\n\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXQvY2hhdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<div class=\\\"pcoded-main-container\\\">\\n  <div class=\\\"pcoded-wrapper\\\">  \\n    <div class=\\\"pcoded-content\\\">\\n      <div class=\\\"pcoded-inner-content\\\">\\n        <div class=\\\"main-body chat-bg \\\">\\n          <div class=\\\"page-wrapper\\\">\\n              <aside class=\\\"sidebar-chat\\\">\\n                    <div class=\\\"row \\\">                     \\n                      <div class=\\\"chat-list col-12 col-sm-5 col-md-4 col-lg-3\\\">\\n                          <div class=\\\"list-group row\\\" *ngFor=\\\"let element of userList\\\">\\n                              <a  href=\\\"javascript:void(0)\\\"  class=\\\"list-group-item\\\" data-chat-user=\\\"Julein Renvoye\\\" (click)=\\\"getId(element)\\\">\\n                                <span>\\n                                  <span class=\\\"name\\\">{{element.name}} </span>  \\n                                </span>\\n                              </a>\\n                            </div>\\n                      </div>\\n                  \\n                      <div class=\\\"col-12 col-sm-7 col-md-8 col-lg-9\\\" >\\n                        <div class=\\\"card\\\">\\n                          <div class=\\\"card-header bg-default text-center text-dark\\\">\\n                            {{receiverName}} \\n                            <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"close text-dark lh-20 m-0\\\" aria-label=\\\"Close\\\">\\n                              &times;\\n                            </button>\\n                          </div>\\n\\n                          <div class=\\\"card-body bg-light-blue\\\"> \\n                            <div class=\\\"widget-chat-activity flex-1\\\">\\n                              <ng-container *ngFor = \\\"let msg of chatList\\\">\\n                                <div class=\\\"messages scrollbar-enabled suppress-x\\\" >\\n                                  \\n                                  <div class=\\\"message media reply\\\"  *ngIf = \\\"msg.recieverId == userId\\\">\\n                                    <div class=\\\"message-body media-body\\\">\\n                                      <p>{{msg.message}}</p>\\n                                    </div>\\n                                  </div>    \\n                                  <div class=\\\"message media \\\" *ngIf = \\\"msg.senderId == userId\\\">\\n                                    <div class=\\\"message-body media-body\\\">\\n                                      <p style=\\\"text-align:right\\\">{{msg.message}}</p>\\n                                    </div>\\n                                  </div>                                \\n                                </div>\\n                              </ng-container>\\n                            </div>\\n                          </div>\\n                          \\n                            <div class=\\\"dfd d-flex justify-content-end col-12 mb-2 p-0\\\">\\n                              <textarea  [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"message\\\"  name=\\\"message\\\"  class=\\\"form-control p-1 pr-2 pl-2 rounded-0\\\" style=\\\"resize: none\\\" placeholder=\\\"Type your message here\\\"></textarea>\\n                              <button  (click)=\\\"sendMessage()\\\" type=\\\"button\\\" class=\\\"fa fa-paper-plane btn-primary sendBtn border-0 rounded-right\\\"></button>\\n                            </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </aside> \\n            \\n            \\n            <script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\\\"></script>\\n            \\n            <script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\\\"></script>\\n            \\n            <script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\\\"></script>\\n          </div>\\n        </div>\\n        \\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Routes, Router, ActivatedRoute } from '@angular/router';\nimport { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport io from 'socket.io-client';\n// import { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n   url \n  private socket;\n  constructor(  private router: Router,\n    private http: HttpClient,\n    private route: ActivatedRoute) {\n      \n      this.userId = JSON.parse(localStorage.getItem('userId')); \n      this.url =  'http://localhost:3000' ;\n      this.socket = io(this.url,{ query:'userId='+ this.userId }); \n      this.socket.on('sendMessageToReciever',(data)=>{\n        if(this.recieverId == data.senderId)\n             this.chatList.push(data)\n      })\n\n    }\n    userId\n  ngOnInit() {\n    \n    this.getAllUser()\n  }\n  userList\n  name\n  getAllUser() { \n    let url = '/getAllUser'\n    this.http.post(environment.baseUrl+url,{userId:this.userId})\n      .subscribe((response: any) => {\n        console.log(\"userList\",response)\n        this.userList = response.data     \n        \n        setTimeout(()=>{\n          this.getId(this.userList[0])\n        },500)\n\n      },  error => {\n        console.log(error)\n        //this.errorMessage = \"Invalid credentials!\"\n      });\n  }\n  chatList\n  receiverName\n  recieverId\n  senderName\ngetId(item){\n  console.log(\"getId calling\",item)\n  let senderId =this.userId; \n  this.recieverId = item._id\n  this.receiverName = item.name\n  let receiverName = item.name;\n  let recieverId = item._id\n  this.senderName = JSON.parse(localStorage.getItem('name')); \n  let url = '/getChat'\n  this.http.post(environment.baseUrl+url,{recieverId,senderId})\n    .subscribe((response: any) => {\n      console.log(\"response\",response)\n      this.chatList = response.chat   \n      console.log(\" this.chatList\", this.chatList)  \n    },  error => {\n      \n      //this.errorMessage = \"Invalid credentials!\"\n    });\n}\n\ngetChat() { \n  let name = localStorage.getItem('name'); \n    let url = '/getAllUser'\n    this.http.post(environment.baseUrl+url,{name:name})\n      .subscribe((response: any) => {\n        console.log(response)\n        this.userList = response.data     \n      },  error => {\n        \n        //this.errorMessage = \"Invalid credentials!\"\n      });\n  }\n\nmessage\n\nsendMessage (){\n  console.log(\"item\",this.message)\n  let senderId =this.userId; \n  let receiverName = this.receiverName;\n  let recieverId = this.recieverId\n  let senderName = this.senderName \n  let url = '/sendMessage'\n  this.http.post(environment.baseUrl+url,{receiverName:receiverName,recieverId,senderId,senderName,message:this.message})\n    .subscribe((response: any) => { \n      this.socket.emit('sendMessageFromSender',{receiverName,recieverId,senderId,senderName,message:this.message})\n\n      this.message = \"\"\n      console.log(\"response\",response)\n   let  data = {\n      name : this.receiverName,\n      _id : recieverId,\n     }  \nthis.getId(data)\n    },  error => {\n      console.log(error)\n    });\n}\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<section class=\\\"login p-fixed d-flex text-center bg-primary common-img-bg\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <div class=\\\"login-card card-block auth-body mr-auto ml-auto\\\">\\r\\n                <form class=\\\"md-float-material\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm.value)\\\" >\\r\\n              <div class=\\\"text-center\\\">\\r\\n              </div>\\r\\n              <div class=\\\"auth-box\\\">\\r\\n                <div class=\\\"row m-b-20\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <h3 class=\\\"text-left txt-primary\\\">Sign In</h3>\\r\\n                  </div>                 \\r\\n                </div>\\r\\n                <hr />\\r\\n                <h6  class=\\\"text-danger\\\" >{{errorMessage}}</h6>\\r\\n                <div class=\\\"row m-0\\\">\\r\\n                  <div class=\\\"input-group d-block\\\" for=\\\"email\\\">\\r\\n                      <input id=\\\"name\\\" class=\\\"form-control\\\"  name=\\\"name\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"name\\\" placeholder=\\\"Enter your name\\\" required >\\r\\n                  </div>\\r\\n                  <div class=\\\"input-group d-block\\\">\\r\\n                      <input id=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Enter your password\\\" [(ngModel)]=\\\"password\\\" required >\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-t-25 text-left\\\">\\r\\n                  <div class=\\\"col-12\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-t-30\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <button class=\\\"btn btn-primary btn-md btn-block waves-effect text-center m-b-20\\\">Sign in</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <hr/>               \\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport {Routes, Router, ActivatedRoute } from '@angular/router';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n// import { CommonService } from '../../services/common.service';\r\n//import { MessagingService } from \"../../shared/messaging.service\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  msg\r\n  data1;\r\n  errorMessage = '';\r\n  buttonLoading  = false;\r\n  email;\r\n  password;\r\n  rememberme: boolean;\r\n  adminData\r\n  message\r\n  constructor(\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private route: ActivatedRoute,\r\n    //private messagingService: MessagingService\r\n    // private commonService: CommonService\r\n    ) {}\r\n\r\n  ngOnInit() {\r\n    // debugger\r\n    // const userId = '5c86773b420b0d0aa00070c3';\r\n    // this.messagingService.requestPermission(userId)\r\n    // this.messagingService.receiveMessage()\r\n    // this.message = this.messagingService.currentMessage\r\n    localStorage.removeItem('name');\r\n    localStorage.removeItem('userId');\r\n\r\n  // if(localStorage.getItem('token'))\r\n\r\n // if (localStorage.getItem('email') && localStorage.getItem('password')) \r\n//  if(localStorage.getItem('rememberme'))\r\n//   {\r\n//     this.email = JSON.parse(localStorage.getItem('email'));\r\n//     this.password = JSON.parse(localStorage.getItem('password'));\r\n//    this.rememberme = true;\r\n//     // this.Formdat.rememberme = this._cookieService.get('remember');\r\n//   }\r\n  //this.router.navigate(['/dashboard']);\r\n  \r\n  }\r\n  environment = environment;\r\n  dataSource;msgpassword\r\n  login(data) {  \r\n    this.errorMessage =''; \r\n    let url = '/login'\r\nconsole.log(\"data\",data)\r\n    this.http.post(environment.baseUrl+url,data)\r\n      .subscribe((response: any) => {\r\n        this.data1 = response\r\n           localStorage.setItem('name', JSON.stringify(data.name));\r\n           localStorage.setItem('userId', JSON.stringify(this.data1.data._id));\r\n\r\n        this.msg = \"Login successful!\"\r\n        this.router.navigate(['/chat']);\r\n      },  error => {\r\n        \r\n        this.errorMessage = \"Invalid credentials!\"\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n// logOut(){\r\n//   localStorage.removeItem('token');\r\n//   localStorage.removeItem('adminData');\r\n//   localStorage.removeItem('access_token');\r\n//   this.router.navigate(['/']);\r\n//   return true;\r\n// }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n\r\n baseUrl: 'http://localhost:3000',\r\n  // appName: 'Lvita - Admin',\r\n  // footer:'Lvita',\r\n  //  firebaseConfig : {\r\n  //   apiKey: \"AIzaSyA0cdfVS7XpAN0_gsW7sjlN6qYXY826ACQ\",\r\n  //   authDomain: \"lvita-user-1550671806654.firebaseapp.com\",\r\n  //   databaseURL: \"https://lvita-user-1550671806654.firebaseio.com\",\r\n  //   projectId: \"lvita-user-1550671806654\",\r\n  //   storageBucket: \"lvita-user-1550671806654.appspot.com\",\r\n  //   messagingSenderId: \"716157439622\",\r\n  //   appId: \"1:716157439622:web:cbd1bd2fc8b7a78f\"\r\n  // }\r\n};\r\n\r\n// <!-- The core Firebase JS SDK is always required and must be listed first -->\r\n// <script src=\"https://www.gstatic.com/firebasejs/6.3.0/firebase-app.js\"></script>\r\n\r\n// <!-- TODO: Add SDKs for Firebase products that you want to use\r\n//      https://firebase.google.com/docs/web/setup#config-web-app -->\r\n// <script>\r\n  // Your web app's Firebase configuration\r\n  // <script src=\"https://www.gstatic.com/firebasejs/6.3.0/firebase-app.js\"></script>\r\n\r\n  // Initialize Firebase\r\n // firebase.initializeApp(firebaseConfig);\r\n// </script>\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */"],"sourceRoot":""}